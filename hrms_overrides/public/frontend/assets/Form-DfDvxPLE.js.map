{"version":3,"file":"Form-DfDvxPLE.js","sources":["../../../../frontend/src/views/expense_claim/Form.vue"],"sourcesContent":["<template>\n\t<ion-page>\n\t\t<ion-content :fullscreen=\"true\">\n\t\t\t<FormView\n\t\t\t\t:key=\"formKey\"\n\t\t\t\tv-if=\"formFields.data\"\n\t\t\t\tdoctype=\"Expense Claim\"\n\t\t\t\tv-model=\"expenseClaim\"\n\t\t\t\t:isSubmittable=\"true\"\n\t\t\t\t:fields=\"formFields.data\"\n\t\t\t\t:id=\"props.id\"\n\t\t\t\t:tabbedView=\"true\"\n\t\t\t\t:tabs=\"tabs\"\n\t\t\t\t:showAttachmentView=\"!hideExpensesAndAttachments\"\n\t\t\t\t@validateForm=\"validateForm\"\n\t\t\t>\n\t\t\t\t<!-- Child Tables -->\n\t\t\t\t<template #expenses=\"{ isFormReadOnly }\">\n\t\t\t\t\t<ExpensesTable\n\t\t\t\t\t\tv-if=\"!hideExpensesAndAttachments\"\n\t\t\t\t\t\tv-model:expenseClaim=\"expenseClaim\"\n\t\t\t\t\t\t:currency=\"currency\"\n\t\t\t\t\t\t:isReadOnly=\"isReadOnly || isFormReadOnly\"\n\t\t\t\t\t\t@addExpenseItem=\"addExpenseItem\"\n\t\t\t\t\t\t@updateExpenseItem=\"updateExpenseItem\"\n\t\t\t\t\t\t@deleteExpenseItem=\"deleteExpenseItem\"\n\t\t\t\t\t/>\n\t\t\t\t</template>\n\n\t\t\t\t<template #taxes=\"{ isFormReadOnly }\">\n\t\t\t\t\t<div v-show=\"false\">\n\t\t\t\t\t\t<ExpenseTaxesTable\n\t\t\t\t\t\t\tv-model:expenseClaim=\"expenseClaim\"\n\t\t\t\t\t\t\t:currency=\"currency\"\n\t\t\t\t\t\t\t:isReadOnly=\"isReadOnly || isFormReadOnly\"\n\t\t\t\t\t\t\t@addExpenseTax=\"addExpenseTax\"\n\t\t\t\t\t\t\t@updateExpenseTax=\"updateExpenseTax\"\n\t\t\t\t\t\t\t@deleteExpenseTax=\"deleteExpenseTax\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\n\t\t\t\t<template #advances=\"{ isFormReadOnly }\">\n\t\t\t\t\t<div v-show=\"false\">\n\t\t\t\t\t\t<ExpenseAdvancesTable\n\t\t\t\t\t\t\tv-model:expenseClaim=\"expenseClaim\"\n\t\t\t\t\t\t\t:currency=\"currency\"\n\t\t\t\t\t\t\t:isReadOnly=\"isReadOnly || isFormReadOnly\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t</FormView>\n\t\t</ion-content>\n\t</ion-page>\n</template>\n\n<script setup>\nimport { IonPage, IonContent } from \"@ionic/vue\"\nimport { createResource } from \"frappe-ui\"\nimport { computed, ref, watch, inject } from \"vue\"\n\nimport FormView from \"@/components/FormView.vue\"\nimport ExpensesTable from \"@/components/ExpensesTable.vue\"\nimport ExpenseTaxesTable from \"@/components/ExpenseTaxesTable.vue\"\nimport ExpenseAdvancesTable from \"@/components/ExpenseAdvancesTable.vue\"\n\nimport { getCompanyCurrency } from \"@/data/currencies\"\n\nconst dayjs = inject(\"$dayjs\")\nconst employee = inject(\"$employee\")\nconst today = dayjs().format(\"YYYY-MM-DD\")\nconst isReadOnly = ref(false)\n\nconst props = defineProps({\n\tid: {\n\t\ttype: String,\n\t\trequired: false,\n\t},\n})\n\nconst tabs = computed(() => {\n\tconst isDraft = expenseClaim.value.docstatus === 0\n\tconst type = expenseClaim.value.custom_expense_claim_type\n\n\tlet name = \"Expenses\"\n\n\tif (isDraft && type === \"Trip Allowance\") {\n\t\tname = \"Trip Allowance\"\n\t} else if (isDraft && type === \"Food Allowance\") {\n\t\tname = \"Food Allowance\"\n\t}\n\n\treturn [\n\t\t{\n\t\t\tname,\n\t\t\tlastField: \"cost_center\",\n\t\t},\n\t]\n})\nconst formKey = computed(() => {\n\tconst isDraft = expenseClaim.value.docstatus === 0\n\tconst type = expenseClaim.value.custom_expense_claim_type\n\n\tif (!isDraft) {\n\t\t// Non-draft should always show default\n\t\treturn \"default-expense-form\"\n\t}\n\n\tif (type === \"Trip Allowance\") {\n\t\treturn \"trip-allowance-form\"\n\t}\n\n\tif (type === \"Food Allowance\") {\n\t\treturn \"food-allowance-form\"\n\t}\n\t// fallback for other types or when type is empty\n\treturn \"default-expense-form\"\n})\n// object to store form data\nconst expenseClaim = ref({\n\temployee: employee.data.name,\n\tcompany: employee.data.company,\n})\n\nconst currency = computed(() => getCompanyCurrency(expenseClaim.value.company))\nconst hideExpensesAndAttachments = computed(() => {\n\treturn (\n\t\texpenseClaim.value.docstatus === 0 &&\n\t\texpenseClaim.value.custom_expense_claim_type === \"Trip Allowance\"\n\t)\n})\n// get form fields\nconst formFields = createResource({\n\turl: \"hrms.api.get_doctype_fields\",\n\tparams: { doctype: \"Expense Claim\" },\n\ttransform(data) {\n\t\tlet fields = getFilteredFields(data)\n\n\t\treturn fields.map((field) => {\n\t\t\tif (field.fieldname === \"posting_date\") field.default = today\n\t\t\treturn applyFilters(field)\n\t\t})\n\t},\n\tonSuccess(_data) {\n\t\texpenseApproverDetails.reload()\n\t\tcompanyDetails.reload()\n\t},\n})\nformFields.reload()\n\n// resources\nconst advances = createResource({\n\turl: \"hrms.hr.doctype.expense_claim.expense_claim.get_advances\",\n\tparams: { employee: employee.data.name },\n\tauto: true,\n\tonSuccess(data) {\n\t\t// set advances\n\t\tif (props.id) {\n\t\t\texpenseClaim.value.advances?.map((advance) => (advance.selected = true))\n\t\t} else {\n\t\t\texpenseClaim.value.advances = []\n\t\t}\n\n\t\treturn data.forEach((advance) => {\n\t\t\tif (\n\t\t\t\tprops.id &&\n\t\t\t\texpenseClaim.value.advances?.some(\n\t\t\t\t\t(entry) => entry.employee_advance === advance.name\n\t\t\t\t)\n\t\t\t)\n\t\t\t\treturn\n\n\t\t\texpenseClaim.value.advances?.push({\n\t\t\t\temployee_advance: advance.name,\n\t\t\t\tpurpose: advance.purpose,\n\t\t\t\tposting_date: advance.posting_date,\n\t\t\t\tadvance_account: advance.advance_account,\n\t\t\t\tadvance_paid: advance.paid_amount,\n\t\t\t\tunclaimed_amount: advance.paid_amount - advance.claimed_amount,\n\t\t\t\tallocated_amount: 0,\n\t\t\t})\n\t\t})\n\t},\n})\n\nconst expenseApproverDetails = createResource({\n\turl: \"hrms.api.get_expense_approval_details\",\n\tparams: { employee: employee.data.name },\n\tonSuccess(data) {\n\t\tsetExpenseApprover(data)\n\t},\n})\n\nconst companyDetails = createResource({\n\turl: \"hrms.api.get_company_cost_center_and_expense_account\",\n\tparams: { company: expenseClaim.value.company },\n\tonSuccess(data) {\n\t\texpenseClaim.value.cost_center = data?.cost_center\n\t\texpenseClaim.value.payable_account =\n\t\t\tdata?.default_expense_claim_payable_account\n\t},\n})\n\n// form scripts\nwatch(\n\t() => expenseClaim.value.employee,\n\t(employee_id) => {\n\t\tif (props.id && employee_id !== employee.data.name) {\n\t\t\t// if employee is not the current user, set form as read only\n\t\t\tsetFormReadOnly()\n\t\t}\n\t}\n)\n\nwatch(\n\t() => props.id && expenseClaim.value.expenses,\n\t(_) => {\n\t\tif (expenseClaim.value.docstatus === 0) {\n\t\t\tadvances.reload()\n\t\t}\n\t}\n)\nwatch(\n\t() => expenseClaim.value.custom_expense_claim_type,\n\t() => {\n\t\tformFields.data = formFields.data.map(applyFilters)\n\t}\n)\nwatch(\n\t() => expenseClaim.value.advances,\n\t(_value) => {\n\t\tcalculateTotalAdvance()\n\t},\n\t{ deep: true }\n)\n\nwatch(\n\t() => expenseClaim.value.cost_center,\n\t() => {\n\t\texpenseClaim?.value?.expenses?.forEach((expense) => {\n\t\t\texpense.cost_center = expenseClaim.value.cost_center\n\t\t})\n\t}\n)\n\n// helper functions\nfunction getFilteredFields(fields) {\n\t// reduce noise from the form view by excluding unnecessary fields\n\t// eg: employee and other details can be fetched from the session user\n\tconst excludeFields = [\n\t\t\"naming_series\",\n\t\t\"task\",\n\t\t\"taxes_and_charges_sb\",\n\t\t\"advance_payments_sb\",\n\t\t\"accounting_dimensions_section\",\n\t\t\"transactions_section\",\n\t\t\"accounting_details\",\t\t\n\t]\n\tconst extraFields = [\n\t\t\"employee_name\",\n\t\t\"posting_date\",\n\t\t\"approval_status\",\n\t]\n\n\tif (!props.id) excludeFields.push(...extraFields)\n\n\treturn fields.filter((field) => !excludeFields.includes(field.fieldname))\n}\n\nfunction applyFilters(field) {\n\tconst isDraft = expenseClaim.value.docstatus === 0;\n\tconst isTripAllowance = expenseClaim.value.custom_expense_claim_type === \"Trip Allowance\";\n\n\tif ([\"custom_from\", \"custom_to\",\"custom_expense_claim_type\",\"custom_distance_in_km\",\"custom_jobsitehospital_name\",\"custom_trip_amount\",\"custom_number_of_trip\",\"custom_holiday\",\"custom_trip_location\"].includes(field.fieldname)) {\n\t\t// Show only in draft and only if claim type is \"Trip Allowance\"\n\t\tfield.hidden = !(isDraft && isTripAllowance);\n\t}\n\tif ([\"custom_expense_claim_type\",].includes(field.fieldname)) {\n\t\t// Show only in draft and only if claim type is \"Trip Allowance\"\n\t\tfield.read_only = (isDraft && isTripAllowance);\n\t}\n\tif ([\"total_sanctioned_amount\",\"total_claimed_amount\"].includes(field.fieldname)) {\n\t\t// Show only in draft and only if claim type is \"Trip Allowance\"\n\t\tfield.hidden = (isDraft && isTripAllowance);\n\t}\n\tif ([\"mode_of_payment\",\"grand_total\",\"is_paid\",\"clearance_date\",\"remark\",\"employee\",\"department\",].includes(field.fieldname)) {\n\t\t\tfield.hidden = true\n\t\t}\n\tif ([\"posting_date\",].includes(field.fieldname)) {\n\t\t\tfield.read_only = true\n\t\t}\n\tif (field.fieldname === \"cost_center\") {\n\t\tfield.hidden = true  // Hides the field from the form\n\t}\n\tif (field.fieldname === \"payable_account\") {\n\t\tfield.hidden = true \n\t}\n\tif (field.fieldname === \"project\") {\n\t\tfield.hidden = true \n\t}\n\tif (field.fieldname === \"payable_account\") {\n\t\tfield.linkFilters = {\n\t\t\treport_type: \"Balance Sheet\",\n\t\t\taccount_type: \"Payable\",\n\t\t\tcompany: expenseClaim.value.company,\n\t\t\tis_group: 0,\n\t\t}\n\t} else if (field.fieldname === \"cost_center\") {\n\t\tfield.linkFilters = {\n\t\t\tcompany: expenseClaim.value.company,\n\t\t\tis_group: 0,\n\t\t}\n\t} else if (field.fieldname === \"project\") {\n\t\tfield.linkFilters = {\n\t\t\tcompany: expenseClaim.value.company,\n\t\t}\n\t}\n\n\treturn field\n}\n\nfunction setExpenseApprover(data) {\n\tconst expense_approver = formFields.data?.find(\n\t\t(field) => field.fieldname === \"expense_approver\"\n\t)\n\texpense_approver.reqd = data?.is_mandatory\n\texpense_approver.documentList = data?.department_approvers.map(\n\t\t(approver) => ({\n\t\t\tlabel: approver.full_name\n\t\t\t\t? `${approver.name} : ${approver.full_name}`\n\t\t\t\t: approver.name,\n\t\t\tvalue: approver.name,\n\t\t})\n\t)\n\n\texpenseClaim.value.expense_approver = data?.expense_approver\n\texpenseClaim.value.expense_approver_name = data?.expense_approver_name\n}\n\nfunction addExpenseItem(item) {\n\tif (!expenseClaim.value.expenses) expenseClaim.value.expenses = []\n\texpenseClaim.value.expenses.push(item)\n\tcalculateTotals()\n\tcalculateTaxes()\n\tallocateAdvanceAmount()\n}\n\nfunction updateExpenseItem(item, idx) {\n\texpenseClaim.value.expenses[idx] = item\n\tcalculateTotals()\n\tcalculateTaxes()\n\tallocateAdvanceAmount()\n}\n\nfunction deleteExpenseItem(idx) {\n\texpenseClaim.value.expenses.splice(idx, 1)\n\tcalculateTotals()\n\tcalculateTaxes()\n\tallocateAdvanceAmount()\n}\n\nfunction addExpenseTax(item) {\n\tif (!expenseClaim.value.taxes) expenseClaim.value.taxes = []\n\texpenseClaim.value.taxes.push(item)\n\tcalculateTaxes()\n\tallocateAdvanceAmount()\n}\n\nfunction updateExpenseTax(item, idx) {\n\texpenseClaim.value.taxes[idx] = item\n\tcalculateTaxes()\n\tallocateAdvanceAmount()\n}\n\nfunction deleteExpenseTax(idx) {\n\texpenseClaim.value.taxes.splice(idx, 1)\n\tcalculateTaxes()\n\tallocateAdvanceAmount()\n}\n\nfunction calculateTotals() {\n\tlet total_claimed_amount = 0\n\tlet total_sanctioned_amount = 0\n\n\texpenseClaim.value?.expenses?.forEach((item) => {\n\t\ttotal_claimed_amount += parseFloat(item.amount)\n\t\ttotal_sanctioned_amount += parseFloat(item.sanctioned_amount)\n\t})\n\n\texpenseClaim.value.total_claimed_amount = total_claimed_amount\n\texpenseClaim.value.total_sanctioned_amount = total_sanctioned_amount\n\tcalculateGrandTotal()\n}\n\nfunction calculateTaxes() {\n\tlet total_taxes_and_charges = 0\n\n\texpenseClaim.value?.taxes?.forEach((item) => {\n\t\tif (item.rate) {\n\t\t\titem.tax_amount =\n\t\t\t\tparseFloat(expenseClaim.value.total_sanctioned_amount) *\n\t\t\t\tparseFloat(item.rate / 100)\n\t\t}\n\n\t\titem.total =\n\t\t\tparseFloat(item.tax_amount) +\n\t\t\tparseFloat(expenseClaim.value.total_sanctioned_amount)\n\t\ttotal_taxes_and_charges += parseFloat(item.tax_amount)\n\t})\n\texpenseClaim.value.total_taxes_and_charges = total_taxes_and_charges\n\tcalculateGrandTotal()\n}\n\nfunction calculateGrandTotal() {\n\texpenseClaim.value.grand_total =\n\t\tparseFloat(expenseClaim.value.total_sanctioned_amount || 0) +\n\t\tparseFloat(expenseClaim.value.total_taxes_and_charges || 0) -\n\t\tparseFloat(expenseClaim.value.total_advance_amount || 0)\n}\n\nfunction allocateAdvanceAmount() {\n\t// allocate reqd advance amount\n\tlet amount_to_be_allocated =\n\t\tparseFloat(expenseClaim.value.total_sanctioned_amount) +\n\t\tparseFloat(expenseClaim.value.total_taxes_and_charges)\n\tlet total_advance_amount = 0\n\n\texpenseClaim?.value?.advances?.forEach((advance) => {\n\t\tif (amount_to_be_allocated >= parseFloat(advance.unclaimed_amount)) {\n\t\t\tadvance.allocated_amount = parseFloat(advance.unclaimed_amount)\n\t\t\tamount_to_be_allocated -= parseFloat(advance.allocated_amount)\n\t\t} else {\n\t\t\tadvance.allocated_amount = amount_to_be_allocated\n\t\t\tamount_to_be_allocated = 0\n\t\t}\n\n\t\tadvance.selected = advance.allocated_amount > 0 ? true : false\n\t\ttotal_advance_amount += parseFloat(advance.allocated_amount)\n\t})\n\texpenseClaim.value.total_advance_amount = total_advance_amount\n\tcalculateGrandTotal()\n}\n\nfunction calculateTotalAdvance() {\n\t// update total advance amount as per user selection & edited values\n\tlet total_advance_amount = 0\n\n\texpenseClaim?.value?.advances?.forEach((advance) => {\n\t\tif (advance.selected) {\n\t\t\ttotal_advance_amount += parseFloat(advance.allocated_amount)\n\t\t}\n\t})\n\texpenseClaim.value.total_advance_amount = total_advance_amount\n\tcalculateGrandTotal()\n}\n\nfunction setFormReadOnly() {\n\tif (expenseClaim.value.expense_approver === employee.data.user_id) return\n\tformFields.data.map((field) => (field.read_only = true))\n\tisReadOnly.value = true\n}\n\nfunction validateForm() {\n\t// set selected advances\n\tif (!expenseClaim?.value?.advances) return\n\n\texpenseClaim.value.advances = expenseClaim?.value?.advances?.filter(\n\t\t(advance) => advance.selected\n\t)\n\texpenseClaim?.value?.expenses?.forEach((expense) => {\n\t\texpense.cost_center = expenseClaim.value.cost_center\n\t})\n}\n</script>\n"],"names":["dayjs","inject","employee","today","isReadOnly","ref","props","__props","tabs","computed","isDraft","expenseClaim","type","name","formKey","currency","getCompanyCurrency","hideExpensesAndAttachments","formFields","createResource","data","getFilteredFields","field","applyFilters","_data","expenseApproverDetails","companyDetails","advances","_a","advance","entry","_b","setExpenseApprover","watch","employee_id","setFormReadOnly","_","_value","calculateTotalAdvance","expense","fields","excludeFields","extraFields","isTripAllowance","expense_approver","approver","addExpenseItem","item","calculateTotals","calculateTaxes","allocateAdvanceAmount","updateExpenseItem","idx","deleteExpenseItem","addExpenseTax","updateExpenseTax","deleteExpenseTax","total_claimed_amount","total_sanctioned_amount","calculateGrandTotal","total_taxes_and_charges","amount_to_be_allocated","total_advance_amount","validateForm","_c","_e","_d"],"mappings":"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"}